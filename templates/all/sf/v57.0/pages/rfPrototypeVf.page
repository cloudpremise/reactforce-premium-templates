<apex:page controller="rfPrototypeCtrl" showHeader="false" sidebar="false" standardStylesheets="false" applyHtmlTag="true" applyBodyTag="false" docType="html-5.0" showQuickActionVfHeader="false">
    <head>
        <meta charset="utf-8"></meta>
        <meta name="viewport" content="width=device-width,initial-scale=1"></meta>
        <link rel="shortcut icon" href="./favicon.ico?v=2"></link>
        <title>CustomerPortal | Salesforce</title>
        <apex:outputPanel>
            <!-- <link rel="stylesheet" href="{!URLFOR($Resource.xxxxx, 'styles/salesforce-lightning-design-system.min.css')}" type="text/css"/> -->
        </apex:outputPanel>
    </head>
    <body class="slds-scope">
        <apex:slds />
        <apex:outputPanel rendered="{!
            AND(
                true, 
                !maintenanceMode
            )}">
            <apex:form>
                <apex:actionFunction name="loginAF" action="{!login}" reRender="false">
                    <apex:param name="usernameJS" value="" />
                    <apex:param name="passwordJS" value="" />
                </apex:actionFunction>
            </apex:form>
            <apex:form>
                <apex:actionFunction name="registerAF" action="{!registerUser}" reRender="false">
                    <apex:param name="firstNameJS" value="" />
                    <apex:param name="lastNameJS" value="" />
                    <apex:param name="emailJS" value="" />
                    <apex:param name="passwordJS" value="" />
                    <apex:param name="confirmPasswordJS" value="" />
                    <apex:param name="communityNicknameJS" value="" />
                </apex:actionFunction>
            </apex:form>
            <apex:form>
                <apex:actionFunction name="verifyEmailLoginAF" oncomplete="onLoginFormComplete(request, event, data);" action="{!verifyEmailLogin}" reRender="false">
                    <apex:param name="userId" value="" />
                    <apex:param name="identifier" value="" />
                    <apex:param name="verificationCode" value="" />
                </apex:actionFunction>
            </apex:form>
            <apex:form>
                <apex:actionFunction name="verifyEmailRegistrationAF" oncomplete="onRegistrationFormComplete(request, event, data);" action="{!verifyEmailRegistration}" reRender="false">
                    <apex:param name="identifier" value="" />
                    <apex:param name="verificationCode" value="" />
                </apex:actionFunction>
            </apex:form>
            <script type="text/javascript">
                Visualforce.remoting.timeout = 120000;
                //This object will be available from within the reactforce apps via the global.inlineApexAdaptor object
                var inlineApexAdaptor = {
                    'Visualforce': Visualforce,
                    'callInternalApi': '{!$RemoteAction.rfPrototypeCtrl.callInternalApi}',
                    'callSampleInternalApi': '{!$RemoteAction.rfPrototypeCtrl.callSampleInternalApi}',
                    'saveAttachment': '{!$RemoteAction.rfPrototypeCtrl.saveAttachment}',
                    'getAttachment': '{!$RemoteAction.rfPrototypeCtrl.getAttachment}',
                    'saveContentVersion': '{!$RemoteAction.rfPrototypeCtrl.saveContentVersion}',
                    'getContentVersion': '{!$RemoteAction.rfPrototypeCtrl.getContentVersion}',
                    'loginApi': '{!$RemoteAction.rfPrototypeCtrl.login}',
                    'registerApi': '{!$RemoteAction.rfPrototypeCtrl.registerUser}',
                    'emailLoginApi': '{!$RemoteAction.rfPrototypeCtrl.emailLogin}',
                    'registerEmailApi': '{!$RemoteAction.rfPrototypeCtrl.registerUserEmail}',
                    'createLeadApi': '{!$RemoteAction.rfPrototypeCtrl.createLead}',
                    'sessionId': '{!sessionId}',
                    'resources': '{!$Resource.ReactforceAssets}',
                    'landingResources': '{!$Resource.CustomerPortal}',
                    'chunkResources': '{!$Resource.CustomerPortalChunk}',
                    'cssResources': '{!$Resource.CustomerPortalCss}',
                    'bundleDomain': '{!bundleDomain}',
                    'page': 'home',
                    'rte': '{!$CurrentPage.parameters.rte}',
                    'baseUrl': window.location.pathname,
                    'bundleId': '{!bundleId}',
                };

                function onLoginFormComplete(request, event, data){}
                function onRegistrationFormComplete(request, event, data){}
            </script>
            <div style="min-height: 100vh;" id="root"></div>

            <div class="slds-spinner_container" id="main-application-loader">
                <div role="status" class="slds-spinner slds-spinner_medium slds-spinner_brand">
                    <span class="slds-assistive-text">One moment while we update your Reactforce Experience…</span>
                    <div class="slds-spinner__dot-a"></div>
                    <div class="slds-spinner__dot-b"></div>
                </div>
                <span class="slds-update-experience" id="update-application-experience" style="display:none;position: absolute;top: 50%;left: 0px;right: 0px;z-index: 9051;width: 350px;margin: 0px auto;text-align: center;margin-top: 25px;">One moment while we update your CustomerPortal Experience…</span>
            </div>
        </apex:outputPanel>

        <!-- Load the app from the bundle domain -->
        <apex:outputPanel rendered="{!
            AND(
                AND(
                    NOT(ISBLANK(bundleDomain)), 
                    !productionMode
                ),
                !maintenanceMode
            )}">
            <script type="text/javascript" src="{!bundleDomain + '/assets/js/app.main.v1.js'}"></script>
        </apex:outputPanel>

        <!-- Load the app from the static resource -->
        <apex:outputPanel rendered="{!
            AND(
                ISBLANK(bundleDomain), 
                !maintenanceMode
            )}">
            <script type="text/javascript" src="{!URLFOR($Resource.CustomerPortal, 'assets/js/app.main.v1.js')}"></script>
        </apex:outputPanel>

        <apex:outputPanel rendered="{!
            AND(
                true, 
                maintenanceMode
            )}">
            <div class="slds-grid slds-gutters slds-grid_align-center slds-m-top_medium slds-maintenance-container">
                <div class="slds-col slds-size_1-of-1 slds-medium-size_7-of-12 slds-large-size_5-of-12">
                    <article class="slds-card">
                        <div class="slds-card__header" style="text-align: center;">
                            <img src="{!$Resource.CustomerPortal}/assets/img/logo.png" alt="logo" style="max-width: 200px;" />
                        </div>
                        <div class="slds-card__body slds-card__body_inner">
                            <h2>Temporarily Down for Maintenance</h2>
                            <p>We are performing scheduled maintenance. We should be back online shortly.</p>
                        </div>
                    </article>
                </div>
            </div>
            <style type="text/css">
                .slds-maintenance-container {
                    position: absolute;
                    left: 0px;
                    right: 0px;
                    bottom: 0px;
                    top: 0px;
                    margin: auto !important;
                    height: 230px;
                    text-align: center;
                }
                .slds-maintenance-container h2 {
                    font-size: 23px;
                    font-weight: bold;
                    margin: 20px 0px;
                }
                .slds-maintenance-container p {
                    margin-bottom: 50px;
                    font-size: 16px;
                }
            </style>
        </apex:outputPanel>
    </body>
</apex:page>